{"version":3,"sources":["assets/logo.png","store/initialState.js","store/reducers.js","store/constants.js","components/theme.js","components/siteHeader/SiteHeader.jsx","components/constants.js","components/pageLayout/PageLayout.jsx","pages/HomePage.jsx","pages/SchedulePage.jsx","components/contentCard/ContentCard.jsx","pages/GamesPage.jsx","pages/OpenProjectsPage.jsx","pages/LeadershipPage.jsx","Routes.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","currentPageTitle","reducer","state","initialState","action","newState","type","theme","createMuiTheme","palette","primary","main","dark","secondary","error","light","contrastText","ElevationScroll","children","trigger","useScrollTrigger","disableHysteresis","threshold","React","cloneElement","elevation","SiteHeader","classes","title","Fragment","AppBar","className","appBar","position","Toolbar","Box","display","flexGrow","alignItems","Typography","variant","defaultProps","withStyles","breakpoints","up","marginLeft","width","menuButton","PageLayout","drawerOptions","headerTitle","useState","isOpen","setIsOpen","toggleDrawer","event","key","ThemeProvider","customTheme","CssBaseline","appHeader","Hidden","smDown","SwipeableDrawer","open","onClose","onOpen","anchor","color","ModalProps","keepMounted","toolbar","logo","Divider","List","component","drawerList","map","option","MenuItem","button","Link","to","route","icon","ListItemIcon","ListItemText","content","mixins","height","background","Logo","backgroundSize","backgroundRepeat","margin","paddingLeft","connect","undefined","dispatch","setHeaderTitle","useEffect","ContentCard","expandable","header","subheader","displayMedia","image","mediaTitle","mainContent","expandDirection","expandedContent","isExpanded","setIsExpanded","imagePath","Card","CardHeader","CardMedia","CardContent","CardActions","IconButton","aria-label","clsx","expand","expandOpen","onClick","aria-expanded","media","paddingTop","transform","transition","transitions","create","duration","shortest","Grid","container","spacing","item","xs","routeConfig","HomePage","SchedulePage","OpenProjectsPage","GamesPage","LeadershipPage","window","location","hostname","forEach","config","Routes","exact","path","pageTitle","Boolean","match","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ea789caa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.e6d45760.png\";","export default {\n  currentPageTitle: ''\n};\n","import initialState from './initialState';\nimport * as constants from './constants';\n\nconst reducer = (state = initialState, action) => {\n  const newState = { ...state };\n\n  switch (action.type) {\n    case constants.UPDATE_CURRENT_PAGE_TITLE:\n      newState.currentPageTitle = action.currentPageTitle;\n      break;\n    \n    default:\n      break;\n  }\n\n  return newState;\n};\n\nexport default reducer;\n","export const UPDATE_CURRENT_PAGE_TITLE = 'UPDATE_CURRENT_PAGE_TITLE';","import { createMuiTheme } from '@material-ui/core/styles';\n\n// All the following keys are optional, as default values are provided.\nconst theme = createMuiTheme({\n  palette: {\n    type: 'light',\n    primary: {\n      main: '#003b49',\n      dark: '#003b49',\n    },\n    secondary: {\n      main: '#78BE20',\n      dark: '#78BE20',\n    },\n    error: {\n      light: '#e57373',\n      main: '#f44336',\n      dark: '#d32f2f',\n      contrastText: '#f44336',\n    },\n  },\n});\n\nexport default theme;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Box from '@material-ui/core/Box';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport { DRAWER_WIDTH } from '../constants';\n\nconst propTypes = {\n  classes: PropTypes.object.isRequired,\n  title: PropTypes.string.isRequired,\n  children: PropTypes.element.isRequired,\n};\n\nconst ElevationScroll = ({ children }) => {\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0\n  });\n\n  return React.cloneElement(children, {\n    elevation: trigger ? 4 : 0,\n  });\n}\n\nconst styles = (theme) => ({\n  appBar: ({\n    [theme.breakpoints.up('md')]: {\n      marginLeft: DRAWER_WIDTH,\n      [theme.breakpoints.up('sm')]: {\n        width: `calc(100% - ${DRAWER_WIDTH})`,\n      },\n    },\n  }),\n  menuButton: ({\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  }),\n});\n\nconst SiteHeader = ({ classes, title, children }) => (\n  <React.Fragment>\n    <ElevationScroll>\n      <AppBar className={classes.appBar} position='fixed'>\n        <Toolbar>\n          <Box display=\"flex\" flexGrow={1} alignItems=\"center\">\n            <Typography variant=\"h6\">{title}</Typography>\n          </Box>\n        </Toolbar>\n      </AppBar>\n    </ElevationScroll>\n    <Toolbar />\n    \n  </React.Fragment>\n)\n\nSiteHeader.defaultProps = {\n  title: \"\",\n};\n\nSiteHeader.propTypes = propTypes;\n\nexport default withStyles(styles)(SiteHeader);\n","export const DRAWER_WIDTH = '17vw';\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport List from '@material-ui/core/List';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { Box, CssBaseline, Divider, Hidden } from '@material-ui/core';\nimport { DRAWER_WIDTH } from '../constants';\nimport Logo from '../../assets/logo.png';\nimport customTheme from '../theme';\n\nimport SiteHeader from '../siteHeader/SiteHeader';\n\nconst propTypes = {\n  /** The class name object provided by material ui's withStyles function */\n  classes: PropTypes.object.isRequired,\n  drawerOptions: PropTypes.arrayOf(\n    PropTypes.shape({\n      display: PropTypes.string.isRequired,\n      key: PropTypes.string.isRequired,\n      route: PropTypes.string.isRequired,\n      icon: PropTypes.element,\n    })\n  ),\n  headerTitle: PropTypes.string,\n};\n\nconst styles = (theme) => ({\n  toolbar: {\n    ...theme.mixins.toolbar,\n  },\n  logo: {\n    height: '100%',\n    width: '100%',\n    background: `url(${Logo})`,\n    backgroundSize: 'contain', // might want to switch to contain once we get an actual image\n    backgroundRepeat: 'repeat',\n  },\n  drawerList: {\n    width: DRAWER_WIDTH,\n  },\n  appHeader: {\n    margin: DRAWER_WIDTH,\n  },\n  content: {\n    [theme.breakpoints.up('md')]: {\n      paddingLeft: DRAWER_WIDTH,\n    },\n    marginLeft: '5rem',\n    marginRight: '5rem'\n  },\n});\n\nconst PageLayout = ({ classes, drawerOptions, children, headerTitle }) => {\n  const [isOpen, setIsOpen] = React.useState(true);\n\n  const toggleDrawer = event => {\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <>\n      <ThemeProvider theme={customTheme}>\n        <CssBaseline />\n        <SiteHeader title={headerTitle} className={classes.appHeader}>\n          {children}\n        </SiteHeader>\n        <Hidden smDown>\n          <SwipeableDrawer\n            variant='permanent'\n            open={isOpen}\n            onClose={toggleDrawer}\n            onOpen={toggleDrawer}\n            anchor=\"left\"\n            color=\"primary\"\n            ModalProps={{\n              keepMounted: true, // Better open performance on mobile.\n            }}\n          >\n            <Box className={classes.toolbar}>\n              <Box className={classes.logo} />\n            </Box>\n            <Divider />\n            <List component=\"nav\" className={classes.drawerList}>\n              {drawerOptions.map(option => (\n                <MenuItem button key={option.key} component={Link} to={option.route}>\n                  {option.icon ? <ListItemIcon>{option.icon}</ListItemIcon> : <span />}\n                  <ListItemText primary={option.display} />\n                </MenuItem>\n              ))}\n            </List>\n          </SwipeableDrawer>\n        </Hidden>\n        <main className={classes.content}>\n          <Box className={classes.toolbar} />\n          {children}\n        </main>\n      </ThemeProvider>\n    </>\n  );\n};\n\nPageLayout.defaultProps = {\n  drawerOptions: [],\n};\n\nPageLayout.propTypes = propTypes;\n\nexport default withStyles(styles)(PageLayout);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { UPDATE_CURRENT_PAGE_TITLE } from '../store/constants';\n\nconst propTypes = {\n  setHeaderTitle: PropTypes.func.isRequired,\n};\n\nconst HomePage = ({ setHeaderTitle }) => {\n  React.useEffect(() => {\n    setHeaderTitle('Missouri S&T Game Development Club')\n  }, [setHeaderTitle]);\n\n  return <div>Home</div>\n};\n\nHomePage.propTypes = propTypes;\n\nconst mapDispatchToProps = dispatch => ({\n  setHeaderTitle: title => dispatch({ type: UPDATE_CURRENT_PAGE_TITLE, currentPageTitle: title })\n});\n\nexport default connect(undefined, mapDispatchToProps)(HomePage);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { UPDATE_CURRENT_PAGE_TITLE } from '../store/constants';\n\nconst propTypes = {\n  setHeaderTitle: PropTypes.func.isRequired,\n};\n\nconst SchedulePage = ({ setHeaderTitle }) => {\n  React.useEffect(() => {\n    setHeaderTitle('Schedule')\n  }, [setHeaderTitle]);\n\n  return <div>Schedule</div>\n};\n\nSchedulePage.propTypes = propTypes;\n\nconst mapDispatchToProps = dispatch => ({\n  setHeaderTitle: title => dispatch({ type: UPDATE_CURRENT_PAGE_TITLE, currentPageTitle: title })\n});\n\nexport default connect(undefined, mapDispatchToProps)(SchedulePage);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ShareIcon from '@material-ui/icons/Share';\n\nconst propTypes = {\n  classes: PropTypes.object.isRequired,\n  expandable: PropTypes.bool.isRequired,\n  header: PropTypes.string.isRequired,\n  subheader: PropTypes.string,\n  displayMedia: PropTypes.bool.isRequired,\n  image: PropTypes.string,\n  mediaTitle: PropTypes.string,\n  mainContent: PropTypes.element.isRequired,\n  expandedContent: PropTypes.element,\n  expandDirection: PropTypes.oneOf(['vertical', 'horizontal'])\n};\n\nconst styles = theme => ({\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n});\n\nconst ContentCard = ({\n  classes,\n  expandable,\n  header,\n  subheader,\n  displayMedia,\n  image,\n  mediaTitle,\n  mainContent,\n  expandedContent,\n  expandDirection,\n }) => {\n  const [isExpanded, setIsExpanded] = React.useState(false);\n  const imagePath = `/static/${image}`;\n\n  return (\n    <Card>\n      <CardHeader title={header} subheader={subheader} />\n      {displayMedia\n        ? <CardMedia image={imagePath} title={mediaTitle} />\n        : <div />\n      }\n      <CardContent>\n        {mainContent}\n      </CardContent>\n      <CardActions>\n        <IconButton aria-label=\"share\">\n          <ShareIcon />\n        </IconButton>\n        {\n          expandable\n            ? (\n              <IconButton\n                className={clsx(classes.expand, {\n                  [classes.expandOpen]: isExpanded,\n                })}\n                onClick={() => setIsExpanded(!isExpanded)}\n                aria-expanded={isExpanded}\n                aria-label=\"show more\"\n              >\n                {expandDirection === 'vertical' ? <ExpandMoreIcon /> : <ArrowForwardIosIcon />}\n              </IconButton>\n            )\n            : <span />\n        }\n      </CardActions>\n    </Card>\n  );\n}\n\nContentCard.defaultProps = {\n  expandable: false,\n  subheader: '',\n  displayMedia: false,\n  image: 'placeholder.png',\n  expandDirection: 'vertical'\n};\n\nContentCard.propTypes = propTypes;\n\nexport default withStyles(styles)(ContentCard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { UPDATE_CURRENT_PAGE_TITLE } from '../store/constants';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nimport ContentCard from '../components/contentCard/ContentCard';\n\nconst propTypes = {\n  setHeaderTitle: PropTypes.func.isRequired,\n};\n\nconst GamesPage = ({ setHeaderTitle }) => {\n  React.useEffect(() => {\n    setHeaderTitle('Games')\n  }, [setHeaderTitle]);\n\n  return (\n    <Grid container spacing={5}>\n      <Grid item xs={3}>\n        <ContentCard\n          expandable\n          displayMedia\n          header=\"Test Card\"\n          subheader=\"Andrew Givens\"\n          mainContent={(\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              This is a test card to test the cards ability to card correctly. Hopefully it cards in the right card way.\n            </Typography>\n          )}\n        />\n      </Grid>\n      <Grid item xs={3}>\n        <ContentCard\n          header=\"Test Card\"\n          subheader=\"Andrew Givens\"\n          mainContent={(\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              This is a test card to test the cards ability to card correctly. Hopefully it cards in the right card way.\n            </Typography>\n          )}\n        />\n      </Grid>\n      <Grid item xs={3}>\n        <ContentCard\n          header=\"Test Card\"\n          subheader=\"Andrew Givens\"\n          mainContent={(\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              This is a test card to test the cards ability to card correctly. Hopefully it cards in the right card way.\n            </Typography>\n          )}\n        />\n      </Grid>\n      <Grid item xs={3}>\n        <ContentCard\n          header=\"Test Card\"\n          subheader=\"Andrew Givens\"\n          mainContent={(\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              This is a test card to test the cards ability to card correctly. Hopefully it cards in the right card way.\n            </Typography>\n          )}\n        />\n      </Grid>\n      <Grid item xs={3}>\n        <ContentCard\n          header=\"Test Card\"\n          subheader=\"Andrew Givens\"\n          mainContent={(\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              This is a test card to test the cards ability to card correctly. Hopefully it cards in the right card way.\n            </Typography>\n          )}\n        />\n      </Grid>\n      <Grid item xs={3}>\n        <ContentCard\n          header=\"Test Card\"\n          subheader=\"Andrew Givens\"\n          mainContent={(\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              This is a test card to test the cards ability to card correctly. Hopefully it cards in the right card way.\n            </Typography>\n          )}\n        />\n      </Grid>\n    </Grid>\n  )\n};\n\nGamesPage.propTypes = propTypes;\n\nconst mapDispatchToProps = dispatch => ({\n  setHeaderTitle: title => dispatch({ type: UPDATE_CURRENT_PAGE_TITLE, currentPageTitle: title })\n});\n\nexport default connect(undefined, mapDispatchToProps)(GamesPage);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { UPDATE_CURRENT_PAGE_TITLE } from '../store/constants';\n\nconst propTypes = {\n  setHeaderTitle: PropTypes.func.isRequired,\n};\n\nconst OpenProjectsPage = ({ setHeaderTitle }) => {\n  React.useEffect(() => {\n    setHeaderTitle('Open Projects')\n  }, [setHeaderTitle]);\n\n  return <div>Open Projects</div>\n};\n\nOpenProjectsPage.propTypes = propTypes;\n\nconst mapDispatchToProps = dispatch => ({\n  setHeaderTitle: title => dispatch({ type: UPDATE_CURRENT_PAGE_TITLE, currentPageTitle: title })\n});\n\nexport default connect(undefined, mapDispatchToProps)(OpenProjectsPage);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { UPDATE_CURRENT_PAGE_TITLE } from '../store/constants';\n\nconst propTypes = {\n  setHeaderTitle: PropTypes.func.isRequired,\n};\n\nconst LeadershipPage = ({ setHeaderTitle }) => {\n  React.useEffect(() => {\n    setHeaderTitle('Leadership')\n  }, [setHeaderTitle]);\n\n  return <div>Leadership</div>\n};\n\nLeadershipPage.propTypes = propTypes;\n\nconst mapDispatchToProps = dispatch => ({\n  setHeaderTitle: title => dispatch({ type: UPDATE_CURRENT_PAGE_TITLE, currentPageTitle: title })\n});\n\nexport default connect(undefined, mapDispatchToProps)(LeadershipPage);\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\n// Icons\nimport HomeIcon from '@material-ui/icons/Home';\nimport DateRangeIcon from '@material-ui/icons/DateRange';\nimport PeopleIcon from '@material-ui/icons/People';\nimport VideogameAssetIcon from '@material-ui/icons/VideogameAsset';\nimport InfoIcon from '@material-ui/icons/Info';\n\n// Pages\nimport HomePage from './pages/HomePage';\nimport SchedulePage from './pages/SchedulePage';\nimport GamesPage from './pages/GamesPage';\nimport OpenProjectsPage from './pages/OpenProjectsPage';\nimport LeadershipPage from './pages/LeadershipPage';\n\nexport const routeConfig = [\n  {\n    display: 'Home',\n    key: 'index',\n    route: '/',\n    icon: <HomeIcon />,\n    component: HomePage\n  },\n  {\n    display: 'Schedule',\n    key: 'schedule',\n    route: '/schedule',\n    icon: <DateRangeIcon />,\n    component: SchedulePage\n  },\n  {\n    display: 'Open Projects',\n    key: 'open_projects',\n    route: '/open-projects',\n    icon: <InfoIcon />,\n    component: OpenProjectsPage\n  },\n  {\n    display: 'Games',\n    key: 'games',\n    route: '/games',\n    icon: <VideogameAssetIcon />,\n    component: GamesPage\n  },\n  {\n    display: 'Leadership',\n    key: 'leadership',\n    route: '/leadership',\n    icon: <PeopleIcon />,\n    component: LeadershipPage\n  }\n];\n\nif (window.location.hostname === 'mst-game-development.github.io') {\n  routeConfig.forEach(config => {\n    config.route = `/website${config.route}`;\n  });\n}\n\nconst Routes = () => (\n  <content>\n    <Switch>\n      {\n        routeConfig.map(config => (\n          <Route key={config.key} exact path={config.route} component={config.component} />\n        ))\n      }\n    </Switch>\n  </content>\n);\n\nexport default Routes;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { BrowserRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PageLayout from './components/pageLayout/PageLayout';\nimport Routes, { routeConfig } from './Routes';\n\nApp.propTypes = {\n  pageTitle: PropTypes.string,\n};\n\nfunction App({ pageTitle }) {\n  return (\n    <BrowserRouter>\n      <PageLayout headerTitle={pageTitle} drawerOptions={routeConfig}>\n        <Routes />\n      </PageLayout>\n    </BrowserRouter>\n    \n  );\n}\n\nconst mapStateToProps = state => ({\n  pageTitle: state.currentPageTitle\n});\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport reducer from './store/reducers';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}